/* vim: foldmethod=marker 
 -------------------------*/

/* ========== COMMENTS IN THIS FILE ======== {{{
 *
 * In order to ensure consistency of commenting in this, and other CSS files
 * this section explains how comments are used in this projects CSS files.
 *
 * if it was LESS this file would have been split into multiple files specific
 * to a responsibility, but because it is one huge file it is organised such
 * that code which would have been in its own files are grouped into a section
 * demarcated with an "H1" heading (and generally a fold).
 * What would have been sections within those files, are "H2" sections.
 *
 */

/* ========== THIS IS AN EXAMPLE "H1" STYLE HEADING ========== {{{
 * ^^^^^^^^^^
 * | 10 ='s | so that if folded the start of the lines are vertically aligned
 *
 * it allows for an introductory text here.
 * if no introductory text used, having the comment closing delimiter dropped
 * down to the second line, always ensures a kind of "bottom margin".
 * it looks reasonable if folds are used.
 */
/* }}} */

/* ---------- This is an example "H2" level heading --------- {{{
 * ^^^^^^^^^^
 * | 10 ='s |
 *
 * same basic idea as "H1"
 */
/* }}} */

/* any other comments are essentially "free" style */

/* }}} */

/* ========== BASE RULES ========== {{{
 *
 * Because these properties are defined at the level of the HTML elements
 * elements themselves.  This means each and every time you place an HTML
 * element into a page, and that element is targeted by this section, these
 * styles will be applied to each and every one of those elements.
 * This obviously applies to every web page this style sheet is loaded on.
 * Also, for properties that are inheritable, the children of these elements
 * will also receive these style properties, unless overridden of course.
 */
body {
	font-family: sans-serif, arial;
	font-size: 16px;
	margin: 0;
	padding: 0;
	/* make all text dark grey color */
	color: #333;
}


h2 {
	font-size: 30px;
	margin-top: 38px;
	margin-bottom: 10px;
}

h3 {
	font-size: 22px;
	margin-top: 30px;
	margin-bottom: 10px;
}

/* open up/increase the separation between the lines in paragraphs by 30%  {{{
 * to make them a little more readable }}} */
p {
	line-height: 1.3;
}

/* 
 * <pre> and <code> base properties
 * give <pre> and <code> a similar general appearance
 */
code, pre {
	font-family:  monospace, "courier new";     /* is it appropriate to apply 
	                                               monospaced font to <pre>? */
	font-size: 15px;
	overflow: auto;
	margin: 0;
	line-height: 1.4;
}

pre {
	/* The purpose of these properties is to style the block level code {{{
	 * output by pandoc markdown when you indent code by 4 spaces, i.e. 
	 *
	 *     <pre><code>server {
	 *         listen 80 default_server;
	 *         server_name _;
	 *         root /home/zero/www;
	 *     }</code></pre>
	 *
	 * these background and padding properties are intended to make this 
	 * content have a panel like appearance.
	 * Note: this may (will) have a side effect of causing all <pre> tags to
	 * look like this, but because pandoc output cant have classes applied to
	 * it (that I know of) this "panel" look can't be scoped only to pandoc
	 * output.  Therefore, if it is desired to have <pre> content styled
	 * differently, that content would need to override this with its own
	 * class/ruleset.
	 }}} */
	background-color: #042029;
	padding: 15px;
}

/* styles for "block" code outputted by pandoc markdown compiler 
 * this higher specificity "two element" deep selector is needed to override
 * the <code> base style.
 * If not overridden, the <pre> gets the dark solarized background, but the
 * <code> element on top of the <pre> gets a light #ddd background;
 */
pre code {
	color: #839496;                    /* color as per "solorized" syntax 
	                                      highlighting. Generated by:
	                                      http://markup.su/highlighter/  */
	background-color: #042029;         /* color as per "solorized" syntax 
	                                      highlighting */
	 
}
 
/* basic styling for inline <code> elements.
 * when <code> appears by itself, and not within a <pre> tag, e.g. a single
 * word in a sentence, it will only be lightly styled, so it doesn't stand out
 * as a series of patches against the surrounding paragraph text.
 * when it appears in <pre> tags, these styles will be overriden.
 */
code {
	
	/* Issue: overflow scroll bars appearing when <code> inside <pre> {{{
	 * if the <code> element has more than say, 2px padding, its box
	 * overflows outside the pre tag. (why doesn't the <pre> balloon?)
	 * Because this stylesheet sets `overflow: auto;` on <pre> this causes
	 * little y axis overflow scroll bar to appear, Therefore this padding has
	 * been limited to 2px.
	 }}} */
	padding: 2px;
	border-radius: 2px;
}

/* give a little extra vertical spacing between <li>'s, to make it   {{{
 * "look right" also, it prevents the background/border boxes of <code>
 * elements on adjacent lines from touching each other.
 * }}} */
li {
	margin-top: 5px;
	margin-bottom: 5px;
}


blockquote {
	position: relative;              /* this is to give the blockquote 
	                                    character pseudo element somethig to 
	                                    position itself against */
	padding-top: 10px;
	padding-bottom: 10px;
	padding-left: 35px;              /* create enough gap between the left 
	                                    border and the content to fit the 
	                                    "open-quote" pseudo element */
	margin-top:    10px;
	margin-bottom: 10px;
	margin-left:   20px;
	font-size: 1.1rem;
	font-style: italic;
	border-left: .25rem solid #bbb;  /* put a solid grey line to the left */
}

	/* automatically insert a large quote character at the top left corner {{{
	 * of a blockquote element 
	 }}} */
	blockquote:before {
		position: absolute;          /* allow this to be freely positioned */
		left: 10px;
		content: open-quote;
		color: #bbb;
		font-size: 50px;
	}

/*
 * Note: because this base reset overrides the default link colour AND the 
 * default "visited" state. EVERYTIME a link colour is specified, that ruleset
 * will - at a minimum - have to specify the colour and the general and the 
 * "visited" states
 */
a {
	color: #2199e8;
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}


/*  
 *  Table base rules 
 */
table {
	border-collapse: collapse;
	font-size: 15px;
} 

td, th {
	padding: 6px;
}



/* 
 * Form element base rules
 */
select {
	/* Replace old school "inset" 3d default dropdown arrow with zurb 
	 * foundation arrow */
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
	background-image: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\' version=\'1.1\' width=\'32\' height=\'24\' viewBox=\'0 0 32 24\'><polygon points=\'0,0 32,0 16,24\' style=\'fill: rgb%28138, 138, 138%29\'></polygon></svg>");
	background-repeat: no-repeat;
	/* not sure what this does, but without it dropdown arrow is off position */
	background-origin: content-box;
	background-position: right 0rem center;
	/* resize the zurb svg graphic */
	-webkit-background-size: 9px 6px;
	        background-size: 9px 6px;
}

/* }}} */

/* ========== LAYOUT - general ========== {{{
 *
 * For .main-container class definition, see: 
 * "LAYOUT - grid System", "Grid Container Definitions"
 */


/* ---------- Float Helper Classes ----------
 */
.clearfix {
	clear: both;
}

.float-right {
	float: right !important;
}

.float-left {
	float: left !important;
}

/* }}} */

/* ========== LAYOUT - grid System ========== {{{
 * 
 * For conceptual explanation of how this grid system works, see:
 * http://www.helloerik.com/the-subtle-magic-behind-why-the-bootstrap-3-grid-works
 */

/* ------------ Grid .container Definitions --------- 
 *
 * {{{
 *
 * These are generally - top level container element definitions. i.e. you
 * could have many of these as direct descendants of the body, but you wouldn't
 * nest them.
 * These containers are designed to work where they can have both:
 *
 * * grid system children inside them, e.g. <div class="row"> 
 * * non grid system children inside them, i.e. regular elements
 *
 * I addition these containers purpose is:
 *
 * *  To do what all containing blocks do, provide fixed horizontal
 *    boundaries for children but balloon vertically so that they are always
 *    covering the children - from behind.
 * *  To provide padding so the content doesnâ€™t touch the edge of the browser.
 * *  The container had padding that - when a .row element is present - it
 *    would then offset that padding with negative margin, then, when .col-X
 *    elements are placed inside the .row, their padding essentially replaces
 *    the main-container padding the .row removed.
 *    This allows for non-grid and grid content to be stacked on each other and
 *    their side edges will be alligned vertically.
 *
 }}} */

/* .main-container
 * this is a basic container whose width does not get modified by media  {{{
 * queries as the viewport width changes. */
.main-container {
	padding: 0 15px;        /* Make sure content doesnt touch edge of browser 
	                           and "fluidly" maintain this spacing. 
	                           So essentially this element will be a "fluid"
	                           container below 950px */
	max-width: 950px;       /* constrain the max width so lines of text dont
	                           get crazy long */
	margin: 0 auto;
}
/* }}} */

/* .container-fluid 
 * {{{ */
.container-fluid {
	margin-left: auto;
	margin-right: auto;
	padding-left: 15px;
	padding-right: 15px;
}

/* Apply Nicholas Gallagher's "microclearfix", for in depth reference see: {{{
 * http://www.sitepoint.com/clearing-floats-overview-different-clearfix-methods/
 }}} */
.container-fluid:after {
	content: "";
	display: table;
	clear: both;
}
/* }}} */

/* .container  
 * {{{ */
.container {
  margin-left: auto;
  margin-right: auto;
  padding-left: 15px;
  padding-right: 15px;
}

/* Apply Nicholas Gallagher's "microclearfix", for in depth reference see: {{{
 * http://www.sitepoint.com/clearing-floats-overview-different-clearfix-methods/
 }}} */
.container::after {
  content: "";
  display: table;
  clear: both;
}

@media (min-width: 544px) {
  .container {
    max-width: 576px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

@media (min-width: 992px) {
  .container {
    max-width: 940px;
  }
}

@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
}
/* }}} */


/* ------------ .row definition ------------
 *
 {{{ */
.row {
	margin-right: -15px;
	margin-left: -15px;
}

/* Apply Nicholas Gallagher's "microclearfix", for in depth reference see: {{{
 * http://www.sitepoint.com/clearing-floats-overview-different-clearfix-methods/
 }}} */
.row:after {
	content: "";
	display: table;
	clear: both;
}
/* }}} */


/* ------------ .col-X class definitions  --------
 *
 * Note: the original bootstrap grid system bound these class selectors  {{{
 * with the ruleset below. 
 * 
 *     .col-xs-1  --->  .col-xs-12
 *     .col-md-1  --->  .col-md-12
 *     .col-lg-1  --->  .col-lg-12
 *     .col-xl-1  --->  .col-xl-12
 *     
 * I - so far - haven't written content that needed a specific grid style
 * layout for the viewport sizes "lg" or "xl" , so to reduce unused
 * CSS selectors not all those classes have been copied from bootstrap.
 * Obviously those missing classes should be copied from bootstrap if/as
 * needed.
 }}} */
 
/* Basic Properties for All col-*-* Selectors. {{{
 * i.e. when you apply a class=".col-X-X" then one of these selectors will
 * match and apply the declaration block properties - nothing special there.
 * But, as the view port changes size, ADDITIONAL properties - defined further
 * below in the media queries section - will be applied to those same
 * class="col-X-X" elements by media queries, but the rules here will continue
 * to apply.
 *
 }}} */
.col-all-1,     /* {{{ */
.col-all-2,
.col-all-3,
.col-all-4,
.col-all-5,
.col-all-6,
.col-all-7,
.col-all-8,
.col-all-9,
.col-all-10,
.col-all-11,
.col-all-12,
.col-ovr768-1,
.col-ovr768-2,
.col-ovr768-3,
.col-ovr768-4,
.col-ovr768-5,
.col-ovr768-6,
.col-ovr768-7,
.col-ovr768-8,
.col-ovr768-9,
.col-ovr768-10,
.col-ovr768-11,
.col-ovr768-12 {
	/* 
	 * box-sizing: border-box so that the sizes apply to the outer border box 
	 * and therefore the entire box will be no larger than the set size and 
	 * therefore if columns whose widths total 12 "grid" are used they
	 * _should_ all fit into the parent, without the last one wrapping.
	 */
	box-sizing: border-box;
	position: relative;             /* this enables the use of the left/right
	                                   rulesets, e.g .col-ovr768-right-12. 
	                                   Also, this means any child elements with
	                                   position:absolute; or any use of 
	                                   HTMLElement.offsetLeft/offsetParent will
	                                   likely be relative to the nearest one
	                                   of these col-X-X containers */

	min-height: 1px;
	padding-right: 15px;
	padding-left:  15px;
}

/* col-all-X "fancy" layout definitions
 * IMPORTANT: these rules are incomplete and therefore not currently usable.
 * To be able to use these col-all-X classes, the rules which set column
 * widths would need to be added, e.g.
 *
 *  .col-all-1 {
 *  	width: 8.333333%;
 *  }
 *  .col-all-2 {
 *  	width: 16.666667%;
 *  }
 *  
 *  as well as any rules to apply margins (col-all-margin-X) and right, left
 *  properties (col-all-right-X).
 */
.col-all-1,
.col-all-2,
.col-all-3,
.col-all-4,
.col-all-5,
.col-all-6,
.col-all-7,
.col-all-8,
.col-all-9,
.col-all-10,
.col-all-11,
.col-all-12 {
	float: left;
}
/* }}} */
 
/* media queries for that trigger on the col-ovr768-X and larger viewports {{{
 * once the viewport is wide enough, these queries will trigger these "fancy"
 * layout style rules 
 */
@media (min-width: 768px) {
	
	/* make all elements with class="col-ovr768-X" float left {{{ */
	.col-ovr768-1,
	.col-ovr768-2,
	.col-ovr768-3,
	.col-ovr768-4,
	.col-ovr768-5,
	.col-ovr768-6,
	.col-ovr768-7,
	.col-ovr768-8,
	.col-ovr768-9,
	.col-ovr768-10,
	.col-ovr768-11,
	.col-ovr768-12 {
		float: left;
	}
	/* }}} */
	
	/* set the widths on all the col-ovr768-X columns {{{
	 * based on their grid width, i.e. 1-12 */
	.col-ovr768-1 {
		width: 8.333333%;
	}
	.col-ovr768-2 {
		width: 16.666667%;
	}
	.col-ovr768-3 {
		width: 25%;
	}
	.col-ovr768-4 {
		width: 33.333333%;
	}
	.col-ovr768-5 {
		width: 41.666667%;
	}
	.col-ovr768-6 {
		width: 50%;
	}
	.col-ovr768-7 {
		width: 58.333333%;
	}
	.col-ovr768-8 {
		width: 66.666667%;
	}
	.col-ovr768-9 {
		width: 75%;
	}
	.col-ovr768-10 {
		width: 83.333333%;
	}
	.col-ovr768-11 {
		width: 91.666667%;
	}
	.col-ovr768-12 {
		width: 100%;
	}
	/* }}} */
	
	/* helper classes for adjusting column position using "left/right" {{{ 
	 * i.e. because all columns elements using this grid system receive the
	 * "position: relative;" property, they can be adjusted from their normal
	 * position in flow.
	 * an example of how this could be used is, say you have a container "B"
	 * which contains the pages "main" content, so you want it front and center
	 * on a large viewport, like so:
	 *
	 *    +------+------------+-----+
	 *    |      |            |     |
	 *    |      |            |     |
	 *    |  A   |     B      |  C  |
	 *    |      |            |     |
	 *    |      |            |     |
	 *    +------+------------+-----+
	 *
	 * But normally - for mobile views - this would cause B to be in the middle
	 * of the stack, and you really want this:
	 *
	 *        +--------------+
	 *        |     B        |
	 *        +--------------+
	 *        |     A        |
	 *        +--------------+
	 *        |     C        |
	 *        +--------------+
	 *
	 * you can make b the top div in the code, so it appears on top when divs
	 * are stacked:
	 * 
	 *     <div class="col-ovr768-4 .col-ovr768-left-4"> 
	 *         B                   ^^^^^^^^^^^^^^^
	 *     </div>
	 *     <div class="col-ovr768-4 .col-ovr768-right-4"> 
	 *         A                   ^^^^^^^^^^^^^^^
	 *     </div>
	 *     <div class="col-ovr768-4"> 
	 *         C
	 *     </div>
	 *
	 * normally B would appear to the hard left when the div's are floated, 
	 * however, you can use something like this to adjust the positions:
	 *
	 *
	 *            .col-ovr768-right-4    (left: 33.33%)
	 *       A <---------
	 *    +------+------------+-----+
	 *    |      |            |     |
	 *    |      |            |     |
	 *    |  A   |     B      |  C  |
	 *    |      |            |     |
	 *    |      |            |     |
	 *    +------+------------+-----+
	 *      ---------> B
	 *          .col-ovr768-left-4    (left: 33.33%)
	 *
	 *
	 * }}} */
	.col-ovr768-right-0 {      /* {{{ */
		right: auto;
	}
	.col-ovr768-right-1 {
		right: 8.333333%;
	}
	.col-ovr768-right-2 {
		right: 16.666667%;
	}
	.col-ovr768-right-3 {
		right: 25%;
	}
	.col-ovr768-right-4 {
		right: 33.333333%;
	}
	.col-ovr768-right-5 {
		right: 41.666667%;
	}
	.col-ovr768-right-6 {
		right: 50%;
	}
	.col-ovr768-right-7 {
		right: 58.333333%;
	}
	.col-ovr768-right-8 {
		right: 66.666667%;
	}
	.col-ovr768-right-9 {
		right: 75%;
	}
	.col-ovr768-right-10 {
		right: 83.333333%;
	}
	.col-ovr768-right-11 {
		right: 91.666667%;
	}
	.col-ovr768-right-12 {
		right: 100%;
	}
	.col-ovr768-left-0 {
		left: auto;
	}
	.col-ovr768-left-1 {
		left: 8.333333%;
	}
	.col-ovr768-left-2 {
		left: 16.666667%;
	}
	.col-ovr768-left-3 {
		left: 25%;
	}
	.col-ovr768-left-4 {
		left: 33.333333%;
	}
	.col-ovr768-left-5 {
		left: 41.666667%;
	}
	.col-ovr768-left-6 {
		left: 50%;
	}
	.col-ovr768-left-7 {
		left: 58.333333%;
	}
	.col-ovr768-left-8 {
		left: 66.666667%;
	}
	.col-ovr768-left-9 {
		left: 75%;
	}
	.col-ovr768-left-10 {
		left: 83.333333%;
	}
	.col-ovr768-left-11 {
		left: 91.666667%;
	}
	.col-ovr768-left-12 {
		left: 100%;
	}
	/* }}} */
	
	/* margin classes - for moving columns over rightwise {{{
	 * i.e. say you had a single skinny column, say width 4, and you wanted 
	 * to  place it in the middle of the document */
	.col-ovr768-margin-0 {
		margin-left: 0;
	}
	.col-ovr768-margin-1 {
		margin-left: 8.333333%;
	}
	.col-ovr768-margin-2 {
		margin-left: 16.666667%;
	}
	.col-ovr768-margin-3 {
		margin-left: 25%;
	}
	.col-ovr768-margin-4 {
		margin-left: 33.333333%;
	}
	.col-ovr768-margin-5 {
		margin-left: 41.666667%;
	}
	.col-ovr768-margin-6 {
		margin-left: 50%;
	}
	.col-ovr768-margin-7 {
		margin-left: 58.333333%;
	}
	.col-ovr768-margin-8 {
		margin-left: 66.666667%;
	}
	.col-ovr768-margin-9 {
		margin-left: 75%;
	}
	.col-ovr768-margin-10 {
		margin-left: 83.333333%;
	}
	.col-ovr768-margin-11 {
		margin-left: 91.666667%;
	}
	.col-ovr768-margin-12 {
		margin-left: 100%;
	}
}
/* }}} end of media query modifiers */

/* }}} */ 

/* end of LAYOUT - grid system       }}} */ 

/* ========== LAYOUT - helpers ========== {{{
 *
 * 
 * Example: pln = padding, left, none
 *          mvm = margin, vertical, medium
 *          pal = padding, all, large
 *          etc..
 */
.ptn,
.pvn,
.pan { padding-top:    0   !important }

.pts,
.pvs,
.pas { padding-top:    0.5em  !important }

.ptm,
.pvm,
.pam { padding-top:    1em !important }

.ptl,
.pvl,
.pal { padding-top:    2em  !important }

.prn,
.phn,
.pan { padding-right:  0   !important }

.prs,
.phs,
.pas { padding-right:  0.5em  !important }

.prm,
.phm,
.pam { padding-right:  1em !important }

.prl,
.phl,
.pal { padding-right:  2em  !important }

.pbn,
.pvn,
.pan { padding-bottom: 0   !important }

.pbs,
.pvs,
.pas { padding-bottom: 0.5em  !important }

.pbm,
.pvm,
.pam { padding-bottom: 1em !important }

.pbl,
.pvl,
.pal { padding-bottom: 2em  !important }

.pln,
.phn,
.pan { padding-left:   0   !important }

.pls,
.phs,
.pas { padding-left:   0.5em  !important }

.plm,
.phm,
.pam { padding-left:   1em !important }

.pll,
.phl,
.pal { padding-left:   2em  !important }

.mtn,
.mvn,
.man { margin-top:     0   !important }

.mts,
.mvs,
.mas { margin-top:     0.5em  !important }

.mtm,
.mvm,
.mam { margin-top:     1em !important }

.mtl,
.mvl,
.mal { margin-top:     2em  !important }

.mrn,
.mhn,
.man { margin-right:   0   !important }

.mrs,
.mhs,
.mas { margin-right:   0.5em  !important }

.mrm,
.mhm,
.mam { margin-right:   1em !important }

.mrl,
.mhl,
.mal { margin-right:   2em  !important }

.mbn,
.mvn,
.man { margin-bottom:  0   !important }

.mbs,
.mvs,
.mas { margin-bottom:  0.5em  !important }

.mbm,
.mvm,
.mam { margin-bottom:  1em !important }

.mbl,
.mvl,
.mal { margin-bottom:  2em  !important }

.mln,
.mhn,
.man { margin-left:    0   !important }

.mls,
.mhs,
.mas { margin-left:    0.5em  !important }

.mlm,
.mhm,
.mam { margin-left:    1em !important }

.mll,
.mhl,
.mal { margin-left:    2em  !important }

/* }}} */

/* ========== TYPOGRAPHY ========== {{{
 *
 *  http://v4-alpha.getbootstrap.com/components/utilities/#contextual-colors-and-backgrounds  
 */

/* This is used on <h1> titles/headings to assign a font size of an <h2>  {{{
 * e.g. if you just have a simple page thats not busy with alot of noisy
 * surrounding elements "competing" for the users attention, the normal <h1> 
 * font size is too big.
 }}} */
.looks-like-h2 {
	font-size: 24px;
}

/*
 * Paragraph "Lead" Class 
 * This simply makes a paragraph tag a taller font with a lower 
 * font-weight. Itâ€™s good for introductory text and callouts preceding major 
 * content without using up your precious Heading tags. more here:
 * https://scotch.io/bar-talk/bootstrap-3-tips-and-tricks-you-might-not-know#lead-class  
 */
.lead {
	font-size: 20.0px;
	font-weight: 300;
	margin: 16px 0;
}


/*
 * Case Manipulating Classes
 *
 *  http://v4-alpha.getbootstrap.com/components/utilities/#text-transform  
 */
.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}


/* 
 * Text Alignment Classes
 *
 * obviously these can be used to position "display: inline" elements too.
 *
 * http://v4-alpha.getbootstrap.com/components/utilities/#text-alignment 
 */
.text-left   { text-align: left; }
.text-right  { text-align: right; }
.text-center { text-align: center; }



/*
 * Contextual Color Classes For Text
 * 
 *  from bootstrap:
 *  http://v4-alpha.getbootstrap.com/components/utilities/#contextual-colors-and-backgrounds  
 * 
 *  Note: Its not shown in the documentation for these contextual text colors
 *  but obviously these classes can be applied to anchor elements (links) also
 *
 */ 

.text-secondary {
  color: #777;
}
a.text-secondary:hover,
a.text-secondary:focus {
  color: #5f5f5f;
}

.text-primary {
	color: #2199e8;
}

.text-primary-hover {
	color: #147cc0;
}

.text-success {
	color: #3adb76;
}

.text-success-hover {
	color: #22bb5b;
}

.text-warning {
	color: #ffae00;
}

.text-danger {
	color: #ec5840;
}


.text-grey-999 {
	color: #999;
}

.text-grey-eee {
	color: #eee;
}

.text-white {
	color: #fff;
}

/* }}} */

/* ========== MODIFIER CLASSES ========== {{{
 *
 * These are used by adding a class to the element to be styled.
 * They are different from components in that they dont produce a "complete"
 * component, nor do they require any special HTML elements to produce their
 * effect.
 */

/*
 * ---------- Table Modifier Classes ----------
 *
 * draws an outline around the entire table element, the headings and 
 * the cells
 */
.table-border,
.table-border td,
.table-border th {
	border: 1px solid #bbb; 
} 


.th-underline {
	border-bottom: 1px solid #bbb;
}


/*this is a work in progress - haven't tested it yet */
.tbl-inverse th {
	background-color: #333;
	color: #fff;
}



/* 
 * ---------- List Modifier Classes ----------
 *
 *  based on twitter bootstrap organisation and styles defined here:
 *  http://v4-alpha.getbootstrap.com/content/typography/#lists  
 *
 */

/*
 * Icons bulleted List Classes
 *
 * NOTE: this is dependant on fontawesome being present
 *
 * list with check icon where bullet point normally is.
 * uses CSS "before" pseudo selector so that positioning is acheivable and 
 * also dont need multiple icon declarations on each line
 *
 * This should be able to be used independant of its relationship to other
 * parent elements.
 *
 * example usage
 *
 * <ul class="icon-ul-list">
 *     <li>Provide information.</li>
 *     <li>Access that rate information.</li>
 *     <li>Reduce liability risk.</li>
 * </ul>
 *
 */ 
.list-icons-check {
	list-style-type: none;
	
}
	.list-icons-check li:before {
		font-family: fontawesome ;
		content: "\f00c";
		color: #999;
		margin-left: -39px;
		margin-right: 20px;
		font-size: 22px;
	}



/*
 * ---------- Background Color Modifier Classes ----------
 */
.bg-primary {
	background-color: #2199e8;
}
.bg-primary-hover {
	background-color: #147cc0;
}
.bg-primary-light {
	background-color: #def0fc;
}


.bg-secondary {
	background-color: #777;
}
.bg-secondary-hover {
	background-color: #5f5f5f;
}
.bg-secondary-light {
	background-color: #ebebeb;
}


.bg-success {
	background-color: #3adb76;
}
.bg-success-hover {
	background-color: #22bb5b;
}
.bg-success-light {
	background-color: #e1faea;
}


.bg-warning {
	background-color: #ffae00;
}
.bg-warning-hover {
	background-color: #cc8b00;
}
.bg-warning-light {
	background-color: #fff3d9;
}


.bg-danger {
	background-color: #ec5840;
}
.bg-danger-hover {
	background-color: #da3116;
}
.bg-danger-light {
	background-color: #fce6e2;
}

/* 
 * brand colours background modifiers classes
 */

.bg-outer-space {
	background-color: #2c3840;
}
.bg-outer-space-hover {
	background-color: #41525e;
}

/* 
 * grey background modifiers 
 */
.bg-black {
	background-color: #000;
}
.bg-grey-222 {
	background-color: #222;
}
.bg-grey-333 {
	background-color: #333;
}
.bg-grey-555 {
	background-color: #555;
}
.bg-grey-999 {
	background-color: #999;
}
.bg-grey-bbb {
	background-color: #bbb;
}
.bg-grey-eee {
	background-color: #eee;
}
.bg-white {
	background-color: #fff;
}




/* ----------  Image Modifier Classes ----------
 */

.img-responsive {
	max-width: 100%;
}



/* ---------- Utilities ----------
 */
.caret {
	display: inline-block;
	width: 0;
	height: 0;
	margin-left: 2px;
	vertical-align: middle;
	border-top: 4px dashed;
	border-top: 4px solid;
	border-right: 4px solid transparent;
	border-left: 4px solid transparent;
}

/* }}} */

/* ========== HELPERS ========== {{{
 */
 
/* ------- General Helpers -------- {{{
 */
.display-none {
	display: none;
}
 
/* }}} */
	 
/* ---------- Animation / Transition Helpers ---------- {{{
 */


.fade {
    opacity: 0;
}

.fade.in {
    opacity: 1;
    -webkit-transition: opacity 1.9s linear;
    -o-transition: opacity 1.9s linear;
    transition: all 1.9s linear;
}
/* }}} */
/* }}} */

/* ========== COMPONENTS ========== {{{
 */

/* 
 * ---------- Basic-nav ---------- 
 */
.basic-nav {
	margin-bottom: 15px;
}
	.basic-nav a, .basic-nav a:visited {
		color: #eee;
		display: block;      /* enabled nav links to be styled, e.g. padding */
		float: left;         /* now elements are block, they need to be floated
		                        else they will stack - alternatively use
		                        display: inline-block */
		padding: 16px;
	}
	
	.basic-nav a:hover {
		background-color: #41525e;
		color: #eee;
		text-decoration: none;
	}
	
	.basic-nav a.active {
		background-color: #41525e;
	}
	
	.basic-nav a.logo {
		padding: 10px;
		
		img {
			height: 27px;
		}
	}
	
	.basic-nav a.logo:hover {
		background-color: transparent;
	}


/* 
 * ---------- Forms ---------- 
 */

/* .form-group {{{
 * ----------------
 * the crispy .form-group component is used when you want to add a <label>
 * <input> pair to a form and you want the <label> to start on a new line - and
 * not sit up alongside any previous elements.
 * Also, by creating a div - whose width extends to the sides of the containing
 * block, and putting both the <label> and the <input> inside it, the 
 * .form-group div prevents any subsequent inline elements from floating up
 * into the "group".
 * You create a "form-group" like this:
 *
 *   <div class="form-group">
 *      <label for="...">...</label>
 *      <input type="..." />
 *  </div>
 * 
 * Note: it is a "component" in that it requires a HTML "structure".
 * The margin-bottom makes some space under the div.form-group and the next
 * thing in the document (obviously).
 }}} */
.form-group {
  margin-bottom: 15px;
}

/* This class "form-control" is used on <input> controls to make them:   {{{
 *
 * * block and 100% width which means the <input class="form-control"> will be
 *   printed on its own line and not sit alongside the <label>
 * * Change the visual appearance to be like a twitter bootstrap form element
 *   i.e. a fatter box, white background, box-sizing of border-box  to make
 *   the width more consistent between the different element types, otherwise
 *   "text" boxes are wider than "select", which are skinnier than "submit" 
 *   etc...
 }}}  */
.form-control {
	width: 100%;
	padding: 6px 12px;
	line-height: 1.5;
	color: #333;
	background-color: #fff;
	border: 1px solid #999;
	border-radius: 0;
	font-size: inherit;
	
	/* deal with the input elements breaking out of their parents container. {{{
	 * for background see MDN info on "box-model":
	 * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Styling_HTML_forms#Box_model
	 * and
	 * http://stackoverflow.com/questions/11232627/perfect-100-width-of-parent-container-for-a-bootstrap-input
	 *
	 }}} */
	display: block;
	box-sizing: border-box;
}


/* ---------- Buttons ----------- */

/* 
 * Button structures 
 */
.btn {
	padding: 6px 12px;
	font-size: inherit;
	border-radius: 0;
	line-height: 1.42857143;
	border: none;
	cursor: pointer;
}

.btn-block {
	/*In CSS buttons are "special" and therefore setting block doesn't actually*/
	/*make them block - you need to explicitly set width: 100%*/
	display: block;
	width: 100%;
}


/* 
 * Button skins
 */

.btn-primary {
	color: #fff;
	background-color: #2199e8;
}
.btn-primary:focus,
.btn-primary.focus {
	color: #fff;
	background-color: #147cc0;
}
.btn-primary:hover {
	color: #fff;
	background-color: #147cc0;
}
.btn-primary:active,
.btn-primary.active {
	color: #fff;
	background-color: #147cc0;
}


.btn-secondary {
	color: #fff;
	background-color: #777;
}
.btn-secondary:focus,
.btn-secondary.focus {
	color: #fff;
	background-color: #5f5f5f;
}
.btn-secondary:hover {
	color: #fff;
	background-color: #5f5f5f;
}
.btn-secondary:active,
.btn-secondary.active {
	color: #fff;
	background-color: #5f5f5f;
}




.btn-success {
  color: #fff;
  background-color: #3adb76;
}
.btn-success:focus,
.btn-success.focus {
  color: #fff;
  background-color: #22bb5b;
}
.btn-success:hover {
  color: #fff;
  background-color: #22bb5b;
}
.btn-success:active,
.btn-success.active,
.open > .dropdown-toggle.btn-success {
  color: #fff;
  background-color: #22bb5b;
}





.btn-warning {
  color: #fff;
  background-color: #ffae00;
}
.btn-warning:focus,
.btn-warning.focus {
  color: #fff;
  background-color: #cc8b00;
}
.btn-warning:hover {
  color: #fff;
  background-color: #cc8b00;
}
.btn-warning:active,
.btn-warning.active,
.open > .dropdown-toggle.btn-warning {
  color: #fff;
  background-color: #cc8b00;
}


.btn-danger {
  color: #fff;
  background-color: #ec5840;
}
.btn-danger:focus,
.btn-danger.focus {
  color: #fff;
  background-color: #da3116;
}
.btn-danger:hover {
  color: #fff;
  background-color: #da3116;
}
.btn-danger:active,
.btn-danger.active,
.open > .dropdown-toggle.btn-danger {
  color: #fff;
  background-color: #da3116;
}





/* ---------- Panels ---------- {{{
 *
 * These panels are copied from Bootstrap 3, bootstrap 4 doesn't have panels
 * I think it uses "cards"
 * http://getbootstrap.com/components/#panels
 *
 * Why do these panels need to have an "extra" child element, 
 * `<div class="panel-body">` ? i.e.
 *
 *    <section class="panel panel-default">
 *        <div class="panel-body">
 *            ...
 *        </div>
 *     </section>*
 *
 * By having no padding on the parent container and instead putting the 
 * padding this <div class="panel-body"> child element, you can have a stack
 * of .panel-body and panel-footer sub-containers:
 *
 *     <div class="panel-body"> 
 *     </div>
 *     <div class="panel-body"> 
 *     </div>
 *
 * Where the the padding can be controlled/toggled at the sub-container level,
 * allowing footers to extend "full-bleed" style to the border of the parent
 * .panel element.
 * If the padding was on the parent, this happens:
 * 
 *    +------------------------+
 *    |                        |
 *    |                        |
 *    |                        |
 *    | +--------------------+ |
 *    | |XXXXXXXXXXXXXXXXXXXX| |
 *    | |XXX .panel-footer XX| |
 *    | +--------------------+ |
 *    +------------------------+
 * 
 * }}} */

/* basic panel structure */
.panel {
	margin-bottom: 20px;
	background-color: #fff;
	border: 1px solid transparent;
	border-radius: 0;
	-webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
		  box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
}

	.panel h2 {
		margin-top: 5px;
	}


/* skin for default panel */
.panel-default {
	border-color: #bbb;
}
/* the fact the padding property is contained in this ruleset means a child div
 * needs to be placed inside the parent for panels to work properly this is a
 * bootstrap thing - obviously needed for all the other related panel partials,
 * e.g. panel-footer, panel-header etc
 */
.panel-body {
	padding: 15px;
}

.panel-footer {
	padding: 10px 15px;
	background-color: #eee;
	border-top: 1px solid #bbb;
	border-bottom-right-radius: 0px;
	border-bottom-left-radius: 0px;
}


/*
 * ---------- Wells ----------
 */
.well {
	background-color: #eee;
	border-radius: 0;
	padding: 15px;
	border: 1px solid #bbb;
}

/* }}} */

/* ========== JAVASCRIPT COMPONENTS ======== {{{ 
 */

/* ------- Expandables ----------  {{{
 */
[data-exp-trg] {
	cursor: pointer;
}
/* }}} */ 

/* ------- Popovers ----------  {{{
 */
.popover-wrapper {
	position: relative;
}

.popover {
	position: absolute;
	background-color: #fff;
	right: -150px;
	bottom: 30px;
	width: 250px;
	/*height: 150px;*/
	margin: auto;
	border-radius: 5px;
	/*border: 1px solid #222;*/
	border: 1px solid rgba(0,0,0,.2);
	padding: 20px;
	box-shadow: 5px 10px 10px;
}

/* create triangle at bottom of popover */
.popover:after {
	content: "";
	position: absolute;
	left: 75px;
	top: 100%;
	width: 0px;
	height: 0px;
	border-style: solid;
	border-color: #fff transparent transparent transparent ;
	border-width: 13px;
}

/* overlay another triangle to simulate a border on CSS triangle */
.popover:before {
	content: "";
	position: absolute;
	left: 74px;
	top: 100%;
	width: 0px;
	height: 0px;
	border-style: solid;
	border-color: rgba(0, 0, 0, .4) transparent transparent transparent ;
	border-width: 14px;
}
/* }}} */ 

/* ------- Back to top ---------- {{{
 */
.back-to-top {
	position: fixed;
	bottom: 20px;
	right: 20px;
	visibility: hidden;
	opacity: 0;
	transition: all 1s;
}
/* }}} */ 
 
/* ------- Modals --------------- {{{
 */
.modal {
	position: absolute;
	min-height: 100px;
	min-width: 300px;
	top: 30%;
	left: 50%;
	transform: translate(-50%,-30%);
}
.modal i {
	float: right;
	margin-right: 10px;
	margin-top: 10px;
}
/* }}} */ 

/* ------- Dismissibles --------  {{{
 */
.fa-window-close {
	cursor: pointer;
}
 
[data-diss-trg] {
	float: right;
}

/* }}} */
 
/* }}} */

